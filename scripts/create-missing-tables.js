// Script to create missing database tables in Supabase
require('dotenv').config({ path: '.env.local' });

// Use the service role key for server-side operations
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || '';
const supabaseServiceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY || '';

if (!supabaseUrl || !supabaseServiceRoleKey) {
  console.error('Missing Supabase environment variables for setup');
  process.exit(1);
}

// Create a Supabase client with service role key for server-side operations
const supabaseAdmin = createClient(supabaseUrl, supabaseServiceRoleKey, {
  auth: {
    persistSession: false,
    autoRefreshToken: false,
    detectSessionInUrl: false,
  },
});

async function createMissingTables() {
  try {
    console.log('Creating missing database tables...');
    
    // Create room_members table
    console.log('Creating room_members table...');
    const { error: roomMembersError } = await supabaseAdmin.rpc('exec_sql', {
      sql: `
        CREATE TABLE IF NOT EXISTS room_members (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          room_id BIGINT REFERENCES rooms NOT NULL,
          user_id UUID REFERENCES auth.users NOT NULL,
          joined_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::TEXT, NOW()) NOT NULL,
          UNIQUE(room_id, user_id)
        );
        
        -- Set up Row Level Security (RLS)
        ALTER TABLE room_members ENABLE ROW LEVEL SECURITY;
        
        -- Create indexes for better performance
        CREATE INDEX IF NOT EXISTS room_members_room_id_idx ON room_members (room_id);
        CREATE INDEX IF NOT EXISTS room_members_user_id_idx ON room_members (user_id);
      `
    });
    
    if (roomMembersError) {
      console.error('Error creating room_members table:', roomMembersError);
    } else {
      console.log('‚úÖ room_members table created successfully!');
    }
    
    // Add role column to profiles table if it doesn't exist
    console.log('Adding role column to profiles table...');
    const { error: roleColumnError } = await supabaseAdmin.rpc('exec_sql', {
      sql: `
        ALTER TABLE profiles ADD COLUMN IF NOT EXISTS role TEXT DEFAULT 'user';
        
        -- Create index for better performance
        CREATE INDEX IF NOT EXISTS profiles_role_idx ON profiles (role);
      `
    });
    
    if (roleColumnError) {
      console.error('Error adding role column to profiles table:', roleColumnError);
    } else {
      console.log('‚úÖ role column added to profiles table successfully!');
    }
    
    console.log('\n‚úÖ All missing tables and columns created successfully!');
    return { success: true };
  } catch (error) {
    console.error('Error creating missing tables:', error);
    return { success: false, error: error.message };
  }
}

async function run() {
  console.log('Starting missing tables creation process...');
  
  try {
    const result = await createMissingTables();
    
    if (result.success) {
      console.log('\n‚úÖ Missing tables creation completed successfully!');
      console.log('\nüìù Next steps:');
      console.log('1. Restart your development server');
      console.log('2. Test the chat application');
      process.exit(0);
    } else {
      console.error('‚ùå Missing tables creation failed:', result.error);
      process.exit(1);
    }
  } catch (error) {
    console.error('‚ùå Unexpected error during missing tables creation:', error);
    process.exit(1);
  }
}

run();